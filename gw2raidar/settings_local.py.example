# During development, True is very nice
# True: display errors on-screen; allows ALLOWED_HOSTS to be `[]`
# False: send them to admin emails, be strict about ALLOWED_HOSTS
# DEBUG = False

# When DEBUG is False (must for production),
# this needs to be set for the app's host, like so:
# ALLOWED_HOSTS = ['gw2raidar.example.com']

# This needs to be secret and can't be committed to the repository
# SECRET_KEY = 'ultra super duper secret key goes here'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'gw2raidar',
#         'USER': 'gw2raidar',
#         'PASSWORD': 'quaggan-is-very-smart', # unguessable
#         'HOST': '127.0.0.1',
#         'PORT': '5432',
#     }
# }

EMAIL_SUBJECT_PREFIX = '[gw2raidar] '

# normal mail (like password reset), to users
DEFAULT_FROM_EMAIL = 'gw2raidar@example.com'

# error emails, to admins
SERVER_EMAIL = 'gw2raidar@example.com' #

# the abovementioned admins
# ADMINS = [
#         ('Admin1', 'admin1@example.com'),
#         ('Admin2', 'admin2@example.com'),
#     ]


# SMTP server
# You can use a fake SMTPD that will print any "sent" emails to console:
#
#     python -m smtpd -n -c DebuggingServer localhost:1025
#
# This would require 'EMAIL_PORT = 1025`.
# Obviously, in production, point it to a real SMTP server, where the default
# `EMAIL_PORT = 25` should be okay.
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025

# Make sure we can find the static files when the site is live
# https://docs.djangoproject.com/en/1.10/howto/static-files/deployment/
# STATIC_URL = '/static/'
# STATIC_ROOT = '/var/www/apps/gw2raidar/static/'


# Google Analytics
# GA_PROPERTY_ID = 'UA-XXXXX-Y'

# Save uploaded files (default: "uploads")
# UPLOAD_DIR = "uploads"

# Google Drive API Credentials JSON file
# GOOGLE_CREDENTIAL_FILE = "credentials/GW2Raidar-XXXXXXXXXXXX.json"
